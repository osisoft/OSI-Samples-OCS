trigger:
  batch: true
  branches:
    include:
      - master
  paths:
    include:
      - '/basic_samples/Authentication/ClientCredentialFlow/DotNet'

pr:
  branches:
    include:
      - master
  paths:
    include:
      - '/basic_samples/Authentication/ClientCredentialFlow/DotNet'

variables:
  - template: '/miscellaneous/build_templates/variables.yml'
  - group: LocalServer
  - name: projPath
    value: '/basic_samples/Authentication/ClientCredentialFlow/DotNet/ClientCredentialFlow'
  - name: CredFile
    value: appsettings.json
  - name: CredFileLibrary
    value: product-readiness.auth_cc_dotnet.json
  - name: testPath
    value: '/basic_samples/Authentication/ClientCredentialFlow/DotNet/ClientCredentialFlowTest'
  - name: covStream
    value: Auth_CC_DotNet

jobs:
  - job: Tests
    strategy:
      matrix:
        linux:
          imageName: ubuntu-16.04
        windows:
          imageName: vs2017-win2016
    pool:
      vmImage: $(imageName)
    steps:
      # Download Secure File
      # Download a secure file to a temporary location on the build or release agent
      - task: DownloadSecureFile@1
        inputs:
          secureFile: $(CredFileLibrary)
        displayName: Download library config file

      # Copy Files
      # Copy files from source folder to target folder using match patterns (The match patterns will only match file paths, not folder paths)
      - task: CopyFiles@2
        inputs:
          sourceFolder: $(Agent.TempDirectory)
          contents: $(CredFileLibrary)
          targetFolder: $(Build.SourcesDirectory)$(projPath)/
          #cleanTargetFolder: false # Optional
          overWrite: true # Optional
          #flattenFolders: false # Optional
        displayName: Copy library config file

      - bash: rm $(CredFile)
        workingDirectory: $(Build.SourcesDirectory)$(projPath)/
        displayName: Delete default config file

      - bash: mv $(CredFileLibrary) $(CredFile)
        workingDirectory: $(Build.SourcesDirectory)$(projPath)/
        displayName: Rename library config file

      - script: |
          dotnet restore
          dotnet msbuild -p:HIGHENTROPYVA=true
        workingDirectory: $(Build.SourcesDirectory)$(projPath)/
        displayName: Build app

      - script: |
          dotnet restore
          dotnet test
        workingDirectory: $(Build.SourcesDirectory)$(testPath)/
        displayName: Run tests

  - template: '/miscellaneous/build_templates/coverity.yml'
    parameters:
      agent: $(Agent)
      authPath: $(AuthPath)
      folder: $(Folder)
      path: $(Path)
      server: $(Server)
      projPath: $(projPath)
      name: $(covStream)

  - job: BinSkim
    pool:
      name: Hosted VS2017
    steps:
      - script: |
          dotnet restore
          dotnet msbuild -p:HIGHENTROPYVA=true
        workingDirectory: $(Build.SourcesDirectory)$(projPath)
        displayName: Build

      - task: ms-codeanalysis.vss-microsoft-security-code-analysis-devops.build-task-binskim.BinSkim@3
        displayName: Analyze
        inputs:
          AnalyzeTarget: $(Build.SourcesDirectory)\*.dll;$(Build.SourcesDirectory)\*.exe
